services:
  app:
    build: .
    ports:
      - "${PORT:-8085}:8085"
    env_file:
      - .env
    environment:
      PORT: ${PORT:-8085}
      DATABASE_URL: postgresql://${DATABASE_USER:-events_user}:${DATABASE_PASSWORD:-events_password}@db:5432/${DATABASE_NAME:-events}?sslmode=disable
      KAFKA_URL: kafka:9092
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - melodia-network
    profiles: ["app", "infra", "dev"]

  db:
    image: postgres:16-alpine
    ports:
      - "${DATABASE_PORT:-5434}:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-events}
      POSTGRES_USER: ${DATABASE_USER:-events_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-events_password}
    volumes:
      - ./docs/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - melodia_events_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-events_user} -d ${DATABASE_NAME:-events}"]
      timeout: 20s
      retries: 10
      interval: 3s
      start_period: 10s
    networks:
      - melodia-network
    profiles: ["app", "infra", "dev"]

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - CLUSTER_ID=4L6g3nShT-eMCtK--X86sw
      
      - KAFKA_LOG_RETENTION_HOURS=24
      - KAFKA_LOG_RETENTION_BYTES=1073741824

    ports:
      - "9092:9092"
    networks:
      - melodia-network
    profiles: ["infra", "app"]

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9988:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=melodia
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - melodia-network
    profiles: ["app","infra", "dev"]

volumes:
  melodia_events_postgres_data:

networks:
  melodia-network:
    driver: bridge