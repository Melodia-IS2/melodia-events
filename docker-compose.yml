services:
  app:
    build: .
    ports:
      - "8085:8085"
    env_file:
      - .env
    environment:
      PORT: 8085
      MONGO_PORT: 27017
      MONGO_HOST: mongo
      MONGO_USER: ${MONGO_USER:-root}
      MONGO_PASSWORD: ${MONGO_PASSWORD:-events_password}
      MONGO_DATABASE: ${MONGO_DATABASE:-events}
      KAFKA_URL: kafka:9092
    depends_on:
      kafka:
        condition: service_started
      mongo:
        condition: service_healthy
    networks:
      - melodia-network
    profiles: ["app", "infra", "dev"]

  mongo:
    image: mongo
    ports:
      - "${MONGO_PORT:-27017}:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-events_password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-events}
    volumes:
      - melodia_events_mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --username ${MONGO_USER:-root} --password ${MONGO_PASSWORD:-events_password} --authenticationDatabase admin --eval \"db.adminCommand('ping')\""]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - melodia-network
    profiles: ["app", "infra", "dev"]

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - CLUSTER_ID=4L6g3nShT-eMCtK--X86sw
      
      - KAFKA_LOG_RETENTION_HOURS=24
      - KAFKA_LOG_RETENTION_BYTES=1073741824

    ports:
      - "9092:9092"
    networks:
      - melodia-network
    profiles: ["infra", "app"]

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9988:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=melodia
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - melodia-network
    profiles: ["app","infra", "dev"]

volumes:
  melodia_events_mongo_data:

networks:
  melodia-network:
    driver: bridge